function [theStraightPath, tortuosityByCategory]=lengthOfPath(pathEndPoints,pathDistance,numOfPaths)
theStraightPath=cell(numOfPaths+2,5); %Create empty array with rows=number of paths columns will be path, category, distance, length, tortuosity in that order

for i=2:numOfPaths+2
    theStraightPath(i-1,1)=pathDistance(i,1);
    theStraightPath(i-1,2)=pathDistance(i,2);
    theStraightPath(i-1,3)=pathDistance(i,3);
    theStraightPath(i-1,4)=pathEndPoints(i,3);
    theStraightPath(i-1,5)=num2cell(cell2mat(pathDistance(i,3))/cell2mat(pathEndPoints(i,3)));
end

Sr=1;
SIr=1;
Ir=1;
IDr=1;
Dr=1;

tortuosityByCategory=cell(numOfPaths+1,5); %Create empty array with rows=number of paths columns will be trilaminar layers
for i=1:numOfPaths+2
    if isequal(theStraightPath(i,2), "Superficial")
        tortuosityByCategory(Sr,1)=theStraightPath(i,5);
        Sr=Sr+1;
    elseif isequal(theStraightPath(i,2), "Diving1")
        tortuosityByCategory(SIr,2)=theStraightPath(i,5);
        SIr=SIr+1;
    elseif isequal(theStraightPath(i,2), "Intermediate")
        tortuosityByCategory(Ir,3)=theStraightPath(i,5);
        Ir=Ir+1;
    elseif isequal(theStraightPath(i,2), "Diving2")
        tortuosityByCategory(IDr,4)=theStraightPath(i,5);
        IDr=IDr+1;
    elseif isequal(theStraightPath(i,2), "Deep")
        tortuosityByCategory(Dr,5)=theStraightPath(i,5);
        Dr=Dr+1;
    end
end

%Add header to path lengths array
header={'Path' 'Category' 'Distance (um)' 'Length (um)' 'Tortuosity'};
theStraightPath=[header;theStraightPath];

%Add header to Tortuosity by Category
header2={'Superficial' 'Diving1' 'Intermediate' 'Diving2' 'Deep'};
tortuosityByCategory=[header2;tortuosityByCategory];

end
